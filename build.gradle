plugins {
	id "org.flywaydb.flyway" version "5.2.4"
		id 'java'
}

ext {
	flyway = [
		url: 'jdbc:postgresql://localhost:5430/wishDream',
		user: 'wishDream',
		password: 'wishDream',
		driver: 'org.postgresql.Driver',
		schemas: 'public'
	]
}

allprojects {
	apply plugin: 'java'
	
	group 'kr.co.wishDream'
	version '0.0.1-SNAPSHOT'
	
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	
	compileJava {
	   sourceCompatibility = 1.8
	   targetCompatibility = 1.8
	}
	
	repositories {
		jcenter()
		mavenCentral()
	}
	
	dependencies {
		compile group: 'org.postgresql', name: 'postgresql', version: '42.2.6'
	}
	
	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}

subprojects {
	apply plugin: 'idea'
	apply plugin: 'org.flywaydb.flyway'
	
	sourceSets {
	    main {
	        java {
	            srcDirs = ['src/main/java']
	            java.outputDir = file('out/main')
	            output.resourcesDir = file('out/main')
	        }
	        resources {
	            srcDirs = ['src/main/resources']
	        }
	    }
	    test {
	    	java {
	    		srcDirs = ['src/test/java']
	    	}
	    	resources {
	    		srcDirs = ['src/test/resources']
	    	}
	    }
	}
	
	
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		implementation "io.reactivex.rxjava3:rxjava:3.0.0-RC1"
		// database
		compile group: 'com.github.davidmoten', name: 'rxjava2-jdbc', version: '0.2.4'
		
		compile('org.springframework.boot:spring-boot-starter-thymeleaf')
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'io.projectreactor:reactor-test'
	}
	
	jar {
        manifest.attributes provider: 'gradle'
        version = '0.0.1'
    }
    
}
 
flyway {
    url = project.flyway.url
    user = project.flyway.user
    password = project.flyway.password
    driver = project.flyway.driver
    schemas = project.flyway.schemas
    //locations = [ 'classpath:/db/migration' ]
}


task run {
	println "java-version : ${sourceCompatibility}"
    println "project-version : ${version}"
	dependsOn gradle.includedBuilds*.task(':clean')
	println "####################################################"
	println	""
	println "        All project completed the clean tasks       "
	println	""
	println "####################################################"
    dependsOn gradle.includedBuilds*.task(':build')
    println	""
    println "        All project completed the build tasks       "
    println	""
    println "####################################################"
    dependsOn(':flywayMigrate')
    println	""
    println "            flywayMigrate completed                 "
    println	""
    println "####################################################"
}

defaultTasks 'run'
